;; Analyzed by ClojureScript 1.7.122
{:use-macros {defroute secretary.core}, :excludes #{}, :name dcm.app, :imports nil, :requires {greet dcm.greet, dcm.greet dcm.greet, secretary secretary.core, secretary.core secretary.core}, :uses nil, :defs {application {:name dcm.app/application, :file "src/cljs/dcm/app.cljs", :line 10, :column 1, :end-line 10, :end-column 17, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 10, :column 6, :end-line 10, :end-column 17}}, set-html! {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([el content]))}, :name dcm.app/set-html!, :variadic false, :file "src/cljs/dcm/app.cljs", :end-column 16, :method-params ([el content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el content]))}, home-path {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 19, :column 11, :end-line 19, :end-column 20, :arglists (quote ([& args__19601__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}}, :name dcm.app/home-path, :variadic true, :file "src/cljs/dcm/app.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}, :method-params [(args__19601__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists ([& args__19601__auto__])}, users-path {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 23, :column 11, :end-line 23, :end-column 21, :arglists (quote ([& args__19601__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}}, :name dcm.app/users-path, :variadic true, :file "src/cljs/dcm/app.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}, :method-params [(args__19601__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists ([& args__19601__auto__])}, user-path {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 27, :column 11, :end-line 27, :end-column 20, :arglists (quote ([& args__19601__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}}, :name dcm.app/user-path, :variadic true, :file "src/cljs/dcm/app.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}, :method-params [(args__19601__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists ([& args__19601__auto__])}, jackpot-path {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/app.cljs", :line 32, :column 11, :end-line 32, :end-column 23, :arglists (quote ([& args__19601__auto__])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}}, :name dcm.app/jackpot-path, :variadic true, :file "src/cljs/dcm/app.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args__19601__auto__)], :arglists ([& args__19601__auto__]), :arglists-meta (nil)}, :method-params [(args__19601__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists ([& args__19601__auto__])}}, :require-macros {secretary secretary.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:prefix :id}, :order [:prefix :id]}, :doc nil}