;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{}, :name dcm.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {timer {:name dcm.core/timer, :file "src/cljs/dcm/core.cljs", :line 4, :column 1, :end-line 4, :end-column 15, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 4, :column 10, :end-line 4, :end-column 15}}, time-color {:name dcm.core/time-color, :file "src/cljs/dcm/core.cljs", :line 6, :column 1, :end-line 6, :end-column 20, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 6, :column 10, :end-line 6, :end-column 20}}, time-updater {:name dcm.core/time-updater, :file "src/cljs/dcm/core.cljs", :line 8, :column 1, :end-line 8, :end-column 22, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 8, :column 10, :end-line 8, :end-column 22}}, greeting {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([message]))}, :name dcm.core/greeting, :variadic false, :file "src/cljs/dcm/core.cljs", :end-column 15, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, clock {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 14, :column 7, :end-line 14, :end-column 12, :arglists (quote ([]))}, :name dcm.core/clock, :variadic false, :file "src/cljs/dcm/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-input {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 20, :column 7, :end-line 20, :end-column 18, :arglists (quote ([]))}, :name dcm.core/color-input, :variadic false, :file "src/cljs/dcm/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, simple-example {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([]))}, :name dcm.core/simple-example, :variadic false, :file "src/cljs/dcm/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, run {:protocol-inline nil, :meta {:file "/home/greg/Projects/dcm/src/cljs/dcm/core.cljs", :line 33, :column 16, :end-line 33, :end-column 19, :export true, :arglists (quote ([]))}, :name dcm.core/run, :variadic false, :file "src/cljs/dcm/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div.example-clock :color :value :background-color :type :style :div :input :div.color-input :h1 :on-change}, :order [:h1 :div.example-clock :style :color :div.color-input :input :type :value :on-change :div :background-color]}, :doc nil}